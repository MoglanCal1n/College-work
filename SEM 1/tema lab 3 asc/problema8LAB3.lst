     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      
    14 00000000 07                          a db 7
    15 00000001 0400                        b dw 4
    16 00000003 08000000                    c dd 8
    17 00000007 0300000000000000            d dq 3
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ;(a+b-d)+(a-b-d) = 8
    23                                          
    24 00000000 B800000000                      mov eax, 0
    25 00000005 BB00000000                      mov ebx, 0
    26 0000000A B900000000                      mov ecx, 0
    27 0000000F BA00000000                      mov edx, 0
    28                                          
    29                                          
    30 00000014 A0[00000000]                    mov al, [a] ; al = 7
    31 00000019 B400                            mov ah, 0 ; ax = 7
    32 0000001B 660305[01000000]                add ax, [b] ; ax = 7 + 4
    33                                          
    34                                          
    35 00000022 2B05[07000000]                  sub eax, [d]
    36                                          
    37 00000028 8A0D[00000000]                  mov cl, [a]
    38 0000002E B500                            mov ch, 0
    39 00000030 662B0D[01000000]                sub cx, [b] 
    40                                          
    41 00000037 2B0D[07000000]                  sub ecx, [d]
    42                                          
    43 0000003D 01C8                            add eax, ecx 
    44                                          
    45                                          
    46                                          
    47                                          
    48                                          
    49                                          
    50                                          
    51                                          
    52                                          
    53                                          
    54                                          
    55                                          
    56 0000003F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    57 00000041 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

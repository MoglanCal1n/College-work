     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 05                          a db 5
    14 00000001 0A                          b db 10
    15 00000002 08                          c db 8
    16 00000003 03                          d db 3
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B800000000                      mov eax, 0
    22 00000005 BB00000000                      mov ebx, 0
    23 0000000A BB4B000000                      mov ebx, 75
    24 0000000F F625[01000000]                  mul byte [b]
    25                                          
    26 00000015 66B86400                        mov ax, 100
    27 00000019 F625[00000000]                  mul byte [a]
    28 0000001F 660305[03000000]                add ax, [d]
    29 00000026 6683C005                        add ax, 5
    30 0000002A 6629D8                          sub ax, bx
    31                                          
    32 0000002D BB00000000                      mov ebx, 0
    33                                          
    34 00000032 668B1D[02000000]                mov bx, [c]
    35 00000039 6683EB05                        sub bx, 5
    36                                          
    37 0000003D 66F7F3                          div bx
    38                                          
    39                                          
    40                                      
    41                                          ; exit(0)
    42 00000040 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 00000042 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

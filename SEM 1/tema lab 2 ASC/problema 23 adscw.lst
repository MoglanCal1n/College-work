     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 EE02                        a dw 750 
    14 00000002 D403                        b dw 980
    15 00000004 4C04                        c dw 1100 
    16 00000006 BB02                        d dw 699
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B800000000                      mov eax, 0
    22 00000005 BB00000000                      mov ebx, 0
    23                                          
    24 0000000A 66A1[00000000]                  mov ax, [a]
    25 00000010 660305[02000000]                add ax, [b]
    26 00000017 660305[04000000]                add ax, [c]
    27                                          
    28 0000001E 668B1D[06000000]                mov bx, [d]
    29 00000025 66031D[06000000]                add bx, [d]
    30                                          
    31 0000002C 6629D8                          sub ax, bx
    32                                          ; exit(0)
    33 0000002F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000031 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
